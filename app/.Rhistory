runApp('~')
runApp('~')
runApp('~')
covid_zip_code$ZCTA5CE10
covid_zip_code$COVID_CASE_COUNT_4WEEK
?addPolygons
runApp('~')
?selectInput
runApp('~')
runApp('~')
runApp('~')
runApp('~')
runApp('~')
runApp('~')
runApp('~')
runApp('~')
length(1)
[1, 2]
c(1, 2)
c(1, 2) == 1
c(1, 2) == 1 | 2
c(1, 2) == 1 | 2
any(c(1, 2))
any(c(1, 2) == 1)
runApp('~')
c(1, 2, 3) == 1|2
c(1, 2, 3) == 1|3
c(1, 2, 3) ==
1
c(1, 2, 3) == 4 | 5
runApp('~')
runApp('~')
covid_zip_code$GEOID10
covid_zip_code$GEOID10 == c("10001", "10002")
runApp('~')
runApp('~')
runApp('~')
runApp('~')
runApp('~')
runApp('~')
?round
runApp('~')
setwd("~/Project 2/coronavirus-data-master")
library(tigris)
library(leaflet)
data_modzcta <- read.csv("data-by-modzcta.csv")
recent_modzcta <- read.csv("recent/recent-4-week-by-modzcta.csv")
recent_modzcta_mod <- recent_modzcta[, -1:-2]
covid_modzcta <- cbind(data_modzcta, recent_modzcta_mod)
View(covid_modzcta)
View(covid_modzcta)
# get zip boundaries that start with 1
covid_zip_code <- zctas(cb = TRUE, starts_with = "1")
covid_zip_code <- covid_zip_code[as.numeric(covid_zip_code$ZCTA5CE10) < 11436, ]
covid_modzcta$ZipCode <- as.character(covid_modzcta$ZipCode)
# join zip boundaries and covid data
covid_zip_code <- geo_join(covid_zip_code,
covid_modzcta,
by_sp = "GEOID10",
by_df = "ZipCode",
how = "left")
covid_modzcta$MODIFIED_ZCTA <- as.character(covid_modzcta$MODIFIED_ZCTA)
covid_modzcta$MODIFIED_ZCTA
# join zip boundaries and covid data
covid_zip_code <- geo_join(covid_zip_code,
covid_modzcta,
by_sp = "GEOID10",
by_df = "MODIFIED_ZCTA",
how = "left")
View(covid_zip_code)
View(covid_zip_code)
covid_zip_code <- na.omit(covid_zip_code)
covid_zip_code <- covid_zip_code[order(covid_zip_code$GEOID10), ]
setwd("~/Project 2/Zip App/app")
save(covid_zip_code, file = "covid_zip_code.RData")
shiny::runApp('~')
shiny::runApp('D:/')
setwd("~/GitHub/ADS-group-1/app")
setwd("./ADS-group-1/app")
setwd("../ADS-group-1/app")
load("../output/covid_zip_code.RData")
load("..output/covid_zip_code.RData")
load(".output/covid_zip_code.RData")
load("../app/output/covid_zip_code.RData")
shiny::runApp()
shiny::runApp()
shiny::runApp()
case_by_boro <-
case_by_boro%>%
filter(BOROUGH_GROUP!="Citywide")%>%
mutate(region=as.character(BOROUGH_GROUP))
case_by_boro <- read.csv("by-boro.csv")
case_by_boro <- read.csv("by-boro.csv")
case_by_boro <-
case_by_boro%>%
filter(BOROUGH_GROUP!="Citywide")%>%
mutate(region=as.character(BOROUGH_GROUP))
install.packages("extrafont")
if (!require("DT")) install.packages('DT')
if (!require("dtplyr")) install.packages('dtplyr')
if (!require("lubridate")) install.packages('lubridate')
if (!require("ggmap")) install.packages('ggmap')
if (!require("choroplethrZip")) {
#install.packages("devtools")
library(devtools)
install_github('arilamstein/choroplethrZip@v1.5.0')}
library(dtplyr)
library(dplyr)
library(DT)
library(lubridate)
case_by_boro <- read.csv("~/Documents/Columbia/2020Fall/Applied Data Science/Project 2/coronavirus-data/by-boro.csv")
case_by_boro_ts <- read.csv("~/Documents/Columbia/2020Fall/Applied Data Science/Project 2/coronavirus-data/boro/boroughs-case-hosp-death.csv")
head(case_by_boro)
case_by_boro=case_by_boro[1:5,]
latitude=c(40.8448,40.6782,40.7831,40.7282,40.5795)
longitude=c(-73.8648,-73.9442,-73.9712,-73.7949,-74.1502)
case_by_boro$Lat=latitude
case_by_boro$Long=longitude
head(case_by_boro)
byboro=
case_by_boro%>%
filter(BOROUGH_GROUP!="Citywide")%>%
mutate(region=as.character(BOROUGH_GROUP))
if (!require("choroplethr")) install.packages("choroplethr")
if (!require("devtools")) install.packages("devtools")
library(devtools)
if (!require("choroplethrZip"))
devtools::install_github('arilamstein/choroplethrZip@v1.5.0')
if (!require("ggplot2")) devtools::install_github("hadley/ggplot2")
if (!require("ggmap")) devtools::install_github("dkahle/ggmap")
case_by_boro=case_by_boro[1:5,]
latitude=c(40.8448,40.6782,40.7831,40.7282,40.5795)
longitude=c(-73.8648,-73.9442,-73.9712,-73.7949,-74.1502)
case_by_boro$Lat=latitude
case_by_boro$Long=longitude
head(case_by_boro)
byboro=
case_by_boro%>%
mutate(region=as.character(BOROUGH_GROUP))
if (!require("choroplethr")) install.packages("choroplethr")
if (!require("devtools")) install.packages("devtools")
library(devtools)
if (!require("choroplethrZip"))
devtools::install_github('arilamstein/choroplethrZip@v1.5.0')
if (!require("ggplot2")) devtools::install_github("hadley/ggplot2")
if (!require("ggmap")) devtools::install_github("dkahle/ggmap")
hospitals=read.csv("~/Desktop/hospital_new.csv")
hospitals=read.csv("~/hospital_new.csv")
hospitals=read.csv("~/Documents/Columbia/2020Fall/Applied Data Science/Project 2/ADS-group-1/data/hospital_new.csv")
hospitals=read.csv("~/Documents/Columbia/2020Fall/Applied Data Science/Project 2/ADS-group-1/data/hospital.csv")
hospitals=read.csv("~/Documents/Columbia/2020Fall/Applied Data Science/Project 2/ADS-group-1/data/coronavirus-data-master/hospital.csv")
head(hospitals)
pop_hos=paste(hospitals$Facility.Name)
library(htmltools)
library(leaflet)
library(extrafontdb)
# library(fa)
pop_boro=paste('Borough name:',byboro$region,'</br>',
'Confirmed cases:',byboro$CASE_COUNT,'</br>',
'Death cases:',byboro$DEATH_COUNT,'</br>',
'Hospitalized cases:',byboro$HOSPITALIZED_COUNT,'</br>')
myIcon = makeAwesomeIcon(icon = "hospital", library = "fa",markerColor = "red",iconColor = "white")
leaflet(byboro) %>% addTiles() %>%
addMarkers(~Long, ~Lat, popup = pop_boro)%>%
addAwesomeMarkers(data=hospitals,~long, ~lat, popup = pop_hos,icon=myIcon)%>%
addProviderTiles("CartoDB.Positron")
install.packages('emojifont')
library(emojifont)
library(htmltools)
library(leaflet)
library(emojifont)
# library(fa)
pop_boro=paste('Borough name:',byboro$region,'</br>',
'Confirmed cases:',byboro$CASE_COUNT,'</br>',
'Death cases:',byboro$DEATH_COUNT,'</br>',
'Hospitalized cases:',byboro$HOSPITALIZED_COUNT,'</br>')
myIcon = makeAwesomeIcon(icon = "hospital", library = "fa",markerColor = "red",iconColor = "white")
leaflet(byboro) %>% addTiles() %>%
addMarkers(~Long, ~Lat, popup = pop_boro)%>%
addAwesomeMarkers(data=hospitals,~long, ~lat, popup = pop_hos,icon=myIcon)%>%
addProviderTiles("CartoDB.Positron")
load.fontawesome()
library(htmltools)
library(leaflet)
library(emojifont)
load.fontawesome()
# library(fa)
pop_boro=paste('Borough name:',byboro$region,'</br>',
'Confirmed cases:',byboro$CASE_COUNT,'</br>',
'Death cases:',byboro$DEATH_COUNT,'</br>',
'Hospitalized cases:',byboro$HOSPITALIZED_COUNT,'</br>')
myIcon = makeAwesomeIcon(icon = "hospital", library = "fa",markerColor = "red",iconColor = "white")
leaflet(byboro) %>% addTiles() %>%
addMarkers(~Long, ~Lat, popup = pop_boro)%>%
addAwesomeMarkers(data=hospitals,~long, ~lat, popup = pop_hos,icon=myIcon)%>%
addProviderTiles("CartoDB.Positron")
#myIcon = makeAwesomeIcon(icon = "", library = "fa",markerColor = "red",iconColor = "white")
myIcon = makeAwesomeIcon(icon = "briefcase-medical", library = "fa",markerColor = "red",iconColor = "white")
library(htmltools)
library(leaflet)
library(emojifont)
load.fontawesome()
# library(fa)
pop_boro=paste('Borough name:',byboro$region,'</br>',
'Confirmed cases:',byboro$CASE_COUNT,'</br>',
'Death cases:',byboro$DEATH_COUNT,'</br>',
'Hospitalized cases:',byboro$HOSPITALIZED_COUNT,'</br>')
#myIcon = makeAwesomeIcon(icon = "", library = "fa",markerColor = "red",iconColor = "white")
myIcon = makeAwesomeIcon(icon = "briefcase-medical", library = "fa",markerColor = "red",iconColor = "white")
leaflet(byboro) %>% addTiles() %>%
addMarkers(~Long, ~Lat, popup = pop_boro)%>%
addAwesomeMarkers(data=hospitals,~long, ~lat, popup = pop_hos,icon=myIcon)%>%
addProviderTiles("CartoDB.Positron")
myIcon = makeAwesomeIcon(icon = fontawesome('fa-briefcase-medical'), markerColor = "red",iconColor = "white")
leaflet(byboro) %>% addTiles() %>%
addMarkers(~Long, ~Lat, popup = pop_boro)%>%
addAwesomeMarkers(data=hospitals,~long, ~lat, popup = pop_hos,icon=myIcon)%>%
addProviderTiles("CartoDB.Positron")
library(htmltools)
library(leaflet)
library(emojifont)
load.fontawesome()
# library(fa)
pop_boro=paste('Borough name:',byboro$region,'</br>',
'Confirmed cases:',byboro$CASE_COUNT,'</br>',
'Death cases:',byboro$DEATH_COUNT,'</br>',
'Hospitalized cases:',byboro$HOSPITALIZED_COUNT,'</br>')
myIcon = makeAwesomeIcon(icon = fontawesome('fa-check-circle'), markerColor = "red",iconColor = "white")
#myIcon = makeAwesomeIcon(icon = "briefcase-medical", library = "fa",markerColor = "red",iconColor = "white")
leaflet(byboro) %>% addTiles() %>%
addMarkers(~Long, ~Lat, popup = pop_boro)%>%
addAwesomeMarkers(data=hospitals,~long, ~lat, popup = pop_hos,icon=myIcon)%>%
addProviderTiles("CartoDB.Positron")
library(htmltools)
library(leaflet)
library(emojifont)
load.fontawesome()
# library(fa)
pop_boro=paste('Borough name:',byboro$region,'</br>',
'Confirmed cases:',byboro$CASE_COUNT,'</br>',
'Death cases:',byboro$DEATH_COUNT,'</br>',
'Hospitalized cases:',byboro$HOSPITALIZED_COUNT,'</br>')
myIcon = makeAwesomeIcon(icon = fontawesome('fa-atom'), markerColor = "red",iconColor = "white")
#myIcon = makeAwesomeIcon(icon = "briefcase-medical", library = "fa",markerColor = "red",iconColor = "white")
leaflet(byboro) %>% addTiles() %>%
addMarkers(~Long, ~Lat, popup = pop_boro)%>%
addAwesomeMarkers(data=hospitals,~long, ~lat, popup = pop_hos,icon=myIcon)%>%
addProviderTiles("CartoDB.Positron")
fontawesome('briefcase-medical')
fontawesome('fa-briefcase-medical')
fontawesome('fa-github')
ggplot()+geom_fontawesome('fa-github')
ggplot()+geom_fontawesome('fa-briefcase-medical')
myIcon = makeAwesomeIcon(icon = fontawesome('fa-github'), markerColor = "red",iconColor = "white")
leaflet(byboro) %>% addTiles() %>%
addMarkers(~Long, ~Lat, popup = pop_boro)%>%
addAwesomeMarkers(data=hospitals,~long, ~lat, popup = pop_hos,icon=myIcon)%>%
addProviderTiles("CartoDB.Positron")
ggplot()+geom_fontawesome('fa-h-square')
myIcon = makeAwesomeIcon(icon = fontawesome('fa-h-square'), markerColor = "red",iconColor = "white")
leaflet(byboro) %>% addTiles() %>%
addMarkers(~Long, ~Lat, popup = pop_boro)%>%
addAwesomeMarkers(data=hospitals,~long, ~lat, popup = pop_hos,icon=myIcon)%>%
addProviderTiles("CartoDB.Positron")
myIcon = makeAwesomeIcon(icon = "h-square", library = "fontawesome",markerColor = "red",iconColor = "white")
myIcon = makeAwesomeIcon(icon = "h-square", library = "fa",markerColor = "red",iconColor = "white")
leaflet(byboro) %>% addTiles() %>%
addMarkers(~Long, ~Lat, popup = pop_boro)%>%
addAwesomeMarkers(data=hospitals,~long, ~lat, popup = pop_hos,icon=myIcon)%>%
addProviderTiles("CartoDB.Positron")
myIcon = makeAwesomeIcon(icon = "h-square", library = "fa",iconColor = "red")
leaflet(byboro) %>% addTiles() %>%
addMarkers(~Long, ~Lat, popup = pop_boro)%>%
addAwesomeMarkers(data=hospitals,~long, ~lat, popup = pop_hos,icon=myIcon)%>%
addProviderTiles("CartoDB.Positron")
myIcon = makeAwesomeIcon(icon = "h-square", library = "fa",markerColor = NULL,iconColor = "red")
leaflet(byboro) %>% addTiles() %>%
addMarkers(~Long, ~Lat, popup = pop_boro)%>%
addAwesomeMarkers(data=hospitals,~long, ~lat, popup = pop_hos,icon=myIcon)%>%
addProviderTiles("CartoDB.Positron")
myIcon = makeAwesomeIcon(icon = "h-square", library = "fa",markerColor = "white",iconColor = "red")
leaflet(byboro) %>% addTiles() %>%
addMarkers(~Long, ~Lat, popup = pop_boro)%>%
addAwesomeMarkers(data=hospitals,~long, ~lat, popup = pop_hos,icon=myIcon)%>%
addProviderTiles("CartoDB.Positron")
myIcon = makeAwesomeIcon(icon = "briefcase-medical", library = "fa",markerColor = "white",iconColor = "red")
leaflet(byboro) %>% addTiles() %>%
addMarkers(~Long, ~Lat, popup = pop_boro)%>%
addAwesomeMarkers(data=hospitals,~long, ~lat, popup = pop_hos,icon=myIcon)%>%
addProviderTiles("CartoDB.Positron")
ggplot()+geom_fontawesome('fa-medkit')
myIcon = makeAwesomeIcon(icon = "medkit", library = "fa",markerColor = "white",iconColor = "red")
leaflet(byboro) %>% addTiles() %>%
addMarkers(~Long, ~Lat, popup = pop_boro)%>%
addAwesomeMarkers(data=hospitals,~long, ~lat, popup = pop_hos,icon=myIcon)%>%
addProviderTiles("CartoDB.Positron")
myIcon = makeAwesomeIcon(icon = "medkit", library = "fa",markerColor = "red",iconColor = "white")
leaflet(byboro) %>% addTiles() %>%
addMarkers(~Long, ~Lat, popup = pop_boro)%>%
addAwesomeMarkers(data=hospitals,~long, ~lat, popup = pop_hos,icon=myIcon)%>%
addProviderTiles("CartoDB.Positron")
myIcon = makeAwesomeIcon(icon = "medkit", library = "fa",markerColor = "red",iconColor = "black")
leaflet(byboro) %>% addTiles() %>%
addMarkers(~Long, ~Lat, popup = pop_boro)%>%
addAwesomeMarkers(data=hospitals,~long, ~lat, popup = pop_hos,icon=myIcon)%>%
addProviderTiles("CartoDB.Positron")
myIcon = makeAwesomeIcon(icon = "hospital", library = "fa",markerColor = "red",iconColor = "black")
leaflet(byboro) %>% addTiles() %>%
addMarkers(~Long, ~Lat, popup = pop_boro)%>%
addAwesomeMarkers(data=hospitals,~long, ~lat, popup = pop_hos,icon=myIcon)%>%
addProviderTiles("CartoDB.Positron")
myIcon = makeAwesomeIcon(icon = "clinic-medical", library = "fa",markerColor = "red",iconColor = "black")
leaflet(byboro) %>% addTiles() %>%
addMarkers(~Long, ~Lat, popup = pop_boro)%>%
addAwesomeMarkers(data=hospitals,~long, ~lat, popup = pop_hos,icon=myIcon)%>%
addProviderTiles("CartoDB.Positron")
myIcon = makeAwesomeIcon(icon = "hospital-symbol", library = "fa",markerColor = "red",iconColor = "black")
leaflet(byboro) %>% addTiles() %>%
addMarkers(~Long, ~Lat, popup = pop_boro)%>%
addAwesomeMarkers(data=hospitals,~long, ~lat, popup = pop_hos,icon=myIcon)%>%
addProviderTiles("CartoDB.Positron")
myIcon = makeAwesomeIcon(icon = "first-aid", library = "fa",markerColor = "red",iconColor = "black")
leaflet(byboro) %>% addTiles() %>%
addMarkers(~Long, ~Lat, popup = pop_boro)%>%
addAwesomeMarkers(data=hospitals,~long, ~lat, popup = pop_hos,icon=myIcon)%>%
addProviderTiles("CartoDB.Positron")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
"a" in ['a','b']
'a' in ['a','b']
'a' in c('a','b')
2 in c(1,2,3)
'a' %in% c('a','b')
c(1,2) %in% c(1,2,3)
c(1,2) = c(1,2,3)
c(1,2) == c(1,2,3)
1 = c(1,2,3)
1 match c(1,2,3)
sum(c(1,2) in c(1,2,3))
sum(c(1,2) %in% c(1,2,3))
(c(1,2) == c(1,2,3))==TRUE
isTRUE(c(1,2) == c(1,2,3))
isTRUE(c(1) == c(1,2,3))
isTRUE(c(1,2) %in% c(1,2,3))
isTRUE(c(1) %in% c(1,2,3))
sum(c(1,2) %in% c(1,2,3))
head(hospitals)
phone=c('718-946-3400','718-538-2147')
hospitals[hospitals$Phone==phone,]
runApp()
runApp()
runApp()
runApp()
head(hospitals)
runApp()
runApp()
paste('Hospital Name:', hos_selected$Facility.Name,'</br>',
'Address:', hos_selected$address,'</br>',
'Phone Number:', hos_selected$Phone) %>%
lapply(htmltools::HTML)
hos=hospitals
hos
hos['No.']=seq(1,nrow(hos))
head(hos)
No.=seq(1,nrow(hos))
head(cbind(No.,hos))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
col(hospitals)
colnames(hospitals)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
hospitals$zip=="10027"
runApp()
getwd()
if (!require("dplyr")) {
install.packages("dplyr")
library(dplyr)
}
if (!require("tibble")) {
install.packages("tibble")
library(tibble)
}
if (!require("tidyverse")) {
install.packages("tidyverse")
library(tidyverse)
}
if (!require("shinythemes")) {
install.packages("shinythemes")
library(shinythemes)
}
if (!require("sf")) {
install.packages("sf")
library(sf)
}
if (!require("RCurl")) {
install.packages("RCurl")
library(RCurl)
}
if (!require("tmap")) {
install.packages("tmap")
library(tmap)
}
if (!require("rgdal")) {
install.packages("rgdal")
library(rgdal)
}
if (!require("leaflet")) {
install.packages("leaflet")
library(leaflet)
}
if (!require("shiny")) {
install.packages("shiny")
library(shiny)
}
if (!require("shinythemes")) {
install.packages("shinythemes")
library(shinythemes)
}
if (!require("plotly")) {
install.packages("plotly")
library(plotly)
}
if (!require("ggplot2")) {
install.packages("ggplot2")
library(ggplot2)
}
if (!require("viridis")) {
install.packages("viridis")
library(viridis)
}
if (!require("shinydashboard")) {
install.packages("shinydashboard")
library(shinydashboard)
}
if (!require("readr")) {
install.packages("readr")
library(readr)
}
if (!require("leaflet")) {
install.packages("leaflet")
library(leaflet)
}
if (!require("tigris")) {
install.packages("tigris")
library(tigris)
}
if (!require("emojifont")) {
install.packages("emojifont")
library(emojifont)
}
if (!require("shinyWidgets")) {
install.packages("shinyWidgets")
library(shinyWidgets)
}
load('../app/output/collected_preprocessed_data.RData')
load('../app/output/covid_zip_code.RData')
getwd()
runApp()
runApp()
