ggplot()+geom_fontawesome('fa-github')
ggplot()+geom_fontawesome('fa-briefcase-medical')
myIcon = makeAwesomeIcon(icon = fontawesome('fa-github'), markerColor = "red",iconColor = "white")
leaflet(byboro) %>% addTiles() %>%
addMarkers(~Long, ~Lat, popup = pop_boro)%>%
addAwesomeMarkers(data=hospitals,~long, ~lat, popup = pop_hos,icon=myIcon)%>%
addProviderTiles("CartoDB.Positron")
ggplot()+geom_fontawesome('fa-h-square')
myIcon = makeAwesomeIcon(icon = fontawesome('fa-h-square'), markerColor = "red",iconColor = "white")
leaflet(byboro) %>% addTiles() %>%
addMarkers(~Long, ~Lat, popup = pop_boro)%>%
addAwesomeMarkers(data=hospitals,~long, ~lat, popup = pop_hos,icon=myIcon)%>%
addProviderTiles("CartoDB.Positron")
myIcon = makeAwesomeIcon(icon = "h-square", library = "fontawesome",markerColor = "red",iconColor = "white")
myIcon = makeAwesomeIcon(icon = "h-square", library = "fa",markerColor = "red",iconColor = "white")
leaflet(byboro) %>% addTiles() %>%
addMarkers(~Long, ~Lat, popup = pop_boro)%>%
addAwesomeMarkers(data=hospitals,~long, ~lat, popup = pop_hos,icon=myIcon)%>%
addProviderTiles("CartoDB.Positron")
myIcon = makeAwesomeIcon(icon = "h-square", library = "fa",iconColor = "red")
leaflet(byboro) %>% addTiles() %>%
addMarkers(~Long, ~Lat, popup = pop_boro)%>%
addAwesomeMarkers(data=hospitals,~long, ~lat, popup = pop_hos,icon=myIcon)%>%
addProviderTiles("CartoDB.Positron")
myIcon = makeAwesomeIcon(icon = "h-square", library = "fa",markerColor = NULL,iconColor = "red")
leaflet(byboro) %>% addTiles() %>%
addMarkers(~Long, ~Lat, popup = pop_boro)%>%
addAwesomeMarkers(data=hospitals,~long, ~lat, popup = pop_hos,icon=myIcon)%>%
addProviderTiles("CartoDB.Positron")
myIcon = makeAwesomeIcon(icon = "h-square", library = "fa",markerColor = "white",iconColor = "red")
leaflet(byboro) %>% addTiles() %>%
addMarkers(~Long, ~Lat, popup = pop_boro)%>%
addAwesomeMarkers(data=hospitals,~long, ~lat, popup = pop_hos,icon=myIcon)%>%
addProviderTiles("CartoDB.Positron")
myIcon = makeAwesomeIcon(icon = "briefcase-medical", library = "fa",markerColor = "white",iconColor = "red")
leaflet(byboro) %>% addTiles() %>%
addMarkers(~Long, ~Lat, popup = pop_boro)%>%
addAwesomeMarkers(data=hospitals,~long, ~lat, popup = pop_hos,icon=myIcon)%>%
addProviderTiles("CartoDB.Positron")
ggplot()+geom_fontawesome('fa-medkit')
myIcon = makeAwesomeIcon(icon = "medkit", library = "fa",markerColor = "white",iconColor = "red")
leaflet(byboro) %>% addTiles() %>%
addMarkers(~Long, ~Lat, popup = pop_boro)%>%
addAwesomeMarkers(data=hospitals,~long, ~lat, popup = pop_hos,icon=myIcon)%>%
addProviderTiles("CartoDB.Positron")
myIcon = makeAwesomeIcon(icon = "medkit", library = "fa",markerColor = "red",iconColor = "white")
leaflet(byboro) %>% addTiles() %>%
addMarkers(~Long, ~Lat, popup = pop_boro)%>%
addAwesomeMarkers(data=hospitals,~long, ~lat, popup = pop_hos,icon=myIcon)%>%
addProviderTiles("CartoDB.Positron")
myIcon = makeAwesomeIcon(icon = "medkit", library = "fa",markerColor = "red",iconColor = "black")
leaflet(byboro) %>% addTiles() %>%
addMarkers(~Long, ~Lat, popup = pop_boro)%>%
addAwesomeMarkers(data=hospitals,~long, ~lat, popup = pop_hos,icon=myIcon)%>%
addProviderTiles("CartoDB.Positron")
myIcon = makeAwesomeIcon(icon = "hospital", library = "fa",markerColor = "red",iconColor = "black")
leaflet(byboro) %>% addTiles() %>%
addMarkers(~Long, ~Lat, popup = pop_boro)%>%
addAwesomeMarkers(data=hospitals,~long, ~lat, popup = pop_hos,icon=myIcon)%>%
addProviderTiles("CartoDB.Positron")
myIcon = makeAwesomeIcon(icon = "clinic-medical", library = "fa",markerColor = "red",iconColor = "black")
leaflet(byboro) %>% addTiles() %>%
addMarkers(~Long, ~Lat, popup = pop_boro)%>%
addAwesomeMarkers(data=hospitals,~long, ~lat, popup = pop_hos,icon=myIcon)%>%
addProviderTiles("CartoDB.Positron")
myIcon = makeAwesomeIcon(icon = "hospital-symbol", library = "fa",markerColor = "red",iconColor = "black")
leaflet(byboro) %>% addTiles() %>%
addMarkers(~Long, ~Lat, popup = pop_boro)%>%
addAwesomeMarkers(data=hospitals,~long, ~lat, popup = pop_hos,icon=myIcon)%>%
addProviderTiles("CartoDB.Positron")
myIcon = makeAwesomeIcon(icon = "first-aid", library = "fa",markerColor = "red",iconColor = "black")
leaflet(byboro) %>% addTiles() %>%
addMarkers(~Long, ~Lat, popup = pop_boro)%>%
addAwesomeMarkers(data=hospitals,~long, ~lat, popup = pop_hos,icon=myIcon)%>%
addProviderTiles("CartoDB.Positron")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
"a" in ['a','b']
'a' in ['a','b']
'a' in c('a','b')
2 in c(1,2,3)
'a' %in% c('a','b')
c(1,2) %in% c(1,2,3)
c(1,2) = c(1,2,3)
c(1,2) == c(1,2,3)
1 = c(1,2,3)
1 match c(1,2,3)
sum(c(1,2) in c(1,2,3))
sum(c(1,2) %in% c(1,2,3))
(c(1,2) == c(1,2,3))==TRUE
isTRUE(c(1,2) == c(1,2,3))
isTRUE(c(1) == c(1,2,3))
isTRUE(c(1,2) %in% c(1,2,3))
isTRUE(c(1) %in% c(1,2,3))
sum(c(1,2) %in% c(1,2,3))
head(hospitals)
phone=c('718-946-3400','718-538-2147')
hospitals[hospitals$Phone==phone,]
runApp()
runApp()
runApp()
runApp()
head(hospitals)
runApp()
runApp()
paste('Hospital Name:', hos_selected$Facility.Name,'</br>',
'Address:', hos_selected$address,'</br>',
'Phone Number:', hos_selected$Phone) %>%
lapply(htmltools::HTML)
hos=hospitals
hos
hos['No.']=seq(1,nrow(hos))
head(hos)
No.=seq(1,nrow(hos))
head(cbind(No.,hos))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
col(hospitals)
colnames(hospitals)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
hospitals$zip=="10027"
runApp()
getwd()
if (!require("dplyr")) {
install.packages("dplyr")
library(dplyr)
}
if (!require("tibble")) {
install.packages("tibble")
library(tibble)
}
if (!require("tidyverse")) {
install.packages("tidyverse")
library(tidyverse)
}
if (!require("shinythemes")) {
install.packages("shinythemes")
library(shinythemes)
}
if (!require("sf")) {
install.packages("sf")
library(sf)
}
if (!require("RCurl")) {
install.packages("RCurl")
library(RCurl)
}
if (!require("tmap")) {
install.packages("tmap")
library(tmap)
}
if (!require("rgdal")) {
install.packages("rgdal")
library(rgdal)
}
if (!require("leaflet")) {
install.packages("leaflet")
library(leaflet)
}
if (!require("shiny")) {
install.packages("shiny")
library(shiny)
}
if (!require("shinythemes")) {
install.packages("shinythemes")
library(shinythemes)
}
if (!require("plotly")) {
install.packages("plotly")
library(plotly)
}
if (!require("ggplot2")) {
install.packages("ggplot2")
library(ggplot2)
}
if (!require("viridis")) {
install.packages("viridis")
library(viridis)
}
if (!require("shinydashboard")) {
install.packages("shinydashboard")
library(shinydashboard)
}
if (!require("readr")) {
install.packages("readr")
library(readr)
}
if (!require("leaflet")) {
install.packages("leaflet")
library(leaflet)
}
if (!require("tigris")) {
install.packages("tigris")
library(tigris)
}
if (!require("emojifont")) {
install.packages("emojifont")
library(emojifont)
}
if (!require("shinyWidgets")) {
install.packages("shinyWidgets")
library(shinyWidgets)
}
load('../app/output/collected_preprocessed_data.RData')
load('../app/output/covid_zip_code.RData')
getwd()
runApp()
runApp()
shiny::runApp()
runApp('~/Desktop/Fall2020-Project2-group_434/app')
plot_ly(averages_borough_cumulative, x = ~BOROUGH_GROUP, y = ~COVID_CASE_COUNT)) %>%
plot_ly(averages_borough_cumulative, x = BOROUGH_GROUP, y = COVID_CASE_COUNT)) %>%
plot_ly(averages_borough_cumulative, x = ~BOROUGH_GROUP, y = ~COVID_CASE_COUNT) %>%
add_histogram2d()
averages_borough_cumulative <- as.data.frame(covid_zip_code) %>% group_by(BOROUGH_GROUP) %>%
select(COVID_CASE_COUNT, COVID_DEATH_COUNT, TOTAL_COVID_TESTS, TOTAL_POSITIVE_TESTS, PERCENT_POSITIVE) %>%
summarise_all(mean)
plot_ly(averages_borough_cumulative, x = ~BOROUGH_GROUP, y = ~COVID_CASE_COUNT) %>%
add_histogram2d()
plot_ly(averages_borough_cumulative, x = ~BOROUGH_GROUP, y = ~COVID_CASE_COUNT) %>%
add_histogram()
plot_ly(averages_borough_cumulative, y = ~BOROUGH_GROUP, x= ~COVID_CASE_COUNT) %>%
add_histogram()
plot_ly(averages_borough_cumulative, x = ~factor(BOROUGH_GROUP), y = ~COVID_CASE_COUNT) %>%
add_trace()
averages_borough_cumulative$BOROUGH_GROUP
table(averages_borough_cumulative$BOROUGH_GROUP)
plot_ly(averages_borough_cumulative, x = ~BOROUGH_GROUP, y = ~COVID_CASE_COUNT, type = "bar")
plot_ly(averages_borough_cumulative, x = ~BOROUGH_GROUP, y = ~COVID_CASE_COUNT, type = "bar", marker = list(color = 'rgb(158,202,225)',
line = list(color = 'rgb(8,48,107)',
width = 1.5)))
plot_ly(averages_borough_cumulative, x = ~BOROUGH_GROUP, y = ~COVID_CASE_COUNT, type = "bar", marker = list(color = 'rgb(158,202,225)',line = list(color = 'rgb(8,48,107)',width = 1.5)))
plot_pie_1 <- averages_borough_cumulative %>% plot_ly() %>% add_trace(x = ~BOROUGH_GROUP, y = ~COVID_CASE_COUNT, type = "bar", marker = list(color = 'rgb(158,202,225)',line = list(color = 'rgb(8,48,107)',width = 1.5)))
plot_pie_1
plot_pie_1 <- averages_borough_cumulative %>% plot_ly() %>%
add_trace(x = ~BOROUGH_GROUP, y = ~COVID_CASE_COUNT, type = "bar", marker = list(color = 'rgb(158,202,225)',line = list(color = 'rgb(8,48,107)',width = 1.5))) %>%
add_trace(x = ~BOROUGH_GROUP, y = ~, type = "bar", marker = list(color = 'rgb(158,202,225)',line = list(color = 'rgb(8,48,107)',width = 1.5)))
plot_pie_1 %>% add_trace(x = ~BOROUGH_GROUP, y = ~, type = "bar", marker = list(color = 'rgb(158,202,225)',line = list(color = 'rgb(8,48,107)',width = 1.5)))
plot_pie_1 <- averages_borough_cumulative %>% plot_ly() %>%
add_trace(x = ~BOROUGH_GROUP, y = ~COVID_CASE_COUNT, type = "bar", marker = list(color = 'rgb(158,202,225)',line = list(color = 'rgb(8,48,107)',width = 1.5))) %>%
add_trace(x = ~BOROUGH_GROUP, y = ~COVID_DEATH_COUNT, type = "bar", marker = list(color = 'rgb(158,202,225)',line = list(color = 'rgb(8,48,107)',width = 1.5)))
plot_pie_1
plot_ly(averages_borough_cumulative, x = ~BOROUGH_GROUP, y = ~COVID_CASE_COUNT, type = "bar", marker = list(color = 'rgb(158,202,225)',line = list(color = 'red',width = 1.5)))  %>%
layout(title = "The Summary of NYC Confirmed Case By Groups", showlegend = F,
grid=list(rows=1, columns=3),
paper_bgcolor='transparent',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE)
)
plot_ly(averages_borough_cumulative, x = ~BOROUGH_GROUP, y = ~COVID_CASE_COUNT, type = "bar", marker = list(color = 'rgb(158,202,225)',line = list(color = 'rgb(8,48,107)',width = 1.5)))  %>%
layout(title = "The Summary of NYC Confirmed Case By Groups", showlegend = F,
grid=list(rows=1, columns=3),
paper_bgcolor='transparent',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE)
)
plot_pie_1 <- averages_borough_cumulative %>% plot_ly() %>%
add_trace(x = ~BOROUGH_GROUP, y = ~COVID_CASE_COUNT, type = "bar", marker = list(color = 'rgb(158,202,225)',line = list(color = 'rgb(8,48,107)',width = 1.5))) %>%
add_trace(x = ~BOROUGH_GROUP, y = ~COVID_DEATH_COUNT, type = "bar", marker = list(color = 'red',line = list(color = 'rgb(8,48,107)',width = 1.5)))
plot_pie_1
table(averages_borough_cumulative$TOTAL_COVID_TESTS)
table(averages_borough_cumulative$COVID_CASE_COUNT)
table(averages_borough_cumulative$TOTAL_COVID_TESTS)
table(averages_borough_cumulative$COVID_CASE_COUNT)
plot_bar_1 <- averages_borough_cumulative %>% plot_ly() %>%
add_trace(x = ~BOROUGH_GROUP, y = ~COVID_CASE_COUNT, type = "bar", marker = list(color = 'rgb(158,202,225)',line = list(color = 'rgb(8,48,107)',width = 1.5))) %>%
layout(title = "Borough Cumulative - Confirmed Case Averages", showlegend = F,
paper_bgcolor='transparent',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE)
)
plot_bar_1
plot_bar_1 <- averages_borough_cumulative %>% plot_ly() %>%
add_trace(x = ~BOROUGH_GROUP, y = ~COVID_CASE_COUNT, type = "bar", marker = list(color = 'rgb(158,202,225)',line = list(color = 'rgb(8,48,107)',width = 1.5))) %>%
layout(title = "Borough Cumulative - Confirmed Case Averages", showlegend = F,
paper_bgcolor='transparent',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE)
)
plot_bar_1
plot_bar_2 <- averages_borough_cumulative %>% plot_ly() %>%
add_trace(x = ~BOROUGH_GROUP, y = ~COVID_DEATH_COUNT, type = "bar", marker = list(color = 'rgb(158,202,225)',line = list(color = 'rgb(8,48,107)',width = 1.5))) %>%
layout(title = "Borough Cumulative - Confirmed Case Averages", showlegend = F,
paper_bgcolor='transparent',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE)
)
plot_bar_2
table(averages_borough_cumulative$PERCENT_POSITIVE)
runApp('~/Desktop/Fall2020-Project2-group_434/app')
runApp('~/Desktop/Fall2020-Project2-group_434/app')
runApp('~/Desktop/Fall2020-Project2-group_434/app')
plot_bar_1
View(plot_pie)
runApp('~/Desktop/Fall2020-Project2-group_434/app')
plot_ly(averages_borough_cumulative, x = ~BOROUGH_GROUP, y = ~COVID_CASE_COUNT, type = "bar", marker = list(color = 'rgb(158,202,225)',line = list(color = 'rgb(8,48,107)',width = 1.5)))  %>%
layout(title = "The Summary of NYC Confirmed Case By Groups", showlegend = F,
grid=list(rows=1, columns=3),
paper_bgcolor='transparent',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE)
)
plot_pie_1
plot_bar_1 <- averages_borough_cumulative %>% plot_ly() %>%
add_trace(x = ~BOROUGH_GROUP, y = ~COVID_CASE_COUNT, type = "bar", marker = list(color = 'rgb(158,202,225)',line = list(color = 'rgb(8,48,107)',width = 1.5))) %>%
layout(title = "Borough Cumulative - Confirmed Case Averages", showlegend = F,
paper_bgcolor='transparent',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE)
)
plot_bar_1
plot_ly(averages_borough_cumulative, x = ~BOROUGH_GROUP, y = ~COVID_CASE_COUNT, type = "bar", marker = list(color = 'rgb(158,202,225)',line = list(color = 'rgb(8,48,107)',width = 1.5)))  %>%
layout(title = "The Summary of NYC Confirmed Case By Groups", showlegend = F,
grid=list(rows=1, columns=3),
paper_bgcolor='transparent',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE)
)
plot_ly(averages_borough_cumulative, x = ~BOROUGH_GROUP, y = ~COVID_CASE_COUNT, type = "bar", marker = list(color = 'rgb(158,202,225)',line = list(color = 'rgb(8,48,107)',width = 1.5)))  %>%
layout(title = "The Summary of NYC Confirmed Case By Groups", showlegend = F,
grid=list(rows=1, columns=3),
paper_bgcolor='transparent',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE)
)
plot_ly(averages_borough_cumulative, x = ~BOROUGH_GROUP, y = ~COVID_CASE_COUNT, type = "bar", marker = list(color = 'rgb(158,202,225)',line = list(color = 'rgb(8,48,107)',width = 1.5)))  %>%
layout(title = "The Summary of NYC Confirmed Case By Groups", showlegend = F,
grid=list(rows=1, columns=2),
paper_bgcolor='transparent',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE)
)
plot_ly(averages_borough_cumulative, x = ~BOROUGH_GROUP, y = ~COVID_CASE_COUNT, type = "bar", marker = list(color = 'rgb(158,202,225)',line = list(color = 'rgb(8,48,107)',width = 1.5)), domain = list(row = 0, column = 1))  %>%
plot_ly(averages_borough_cumulative, x = ~BOROUGH_GROUP, y = ~COVID_CASE_COUNT, type = "bar", marker = list(color = 'rgb(158,202,225)',line = list(color = 'rgb(8,48,107)',width = 1.5)), domain = list(row = 0, column = 1))  %>%
layout(title = "The Summary of NYC Confirmed Case By Groups", showlegend = F,
grid=list(rows=1, columns=2),
paper_bgcolor='transparent',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE)
)
is(averages_borough_cumulative)
averages_borough_cumulative <- as.data.frame(averages_borough_cumulative)
plot_ly(averages_borough_cumulative, x = ~BOROUGH_GROUP, y = ~COVID_CASE_COUNT, type = "bar", marker = list(color = 'rgb(158,202,225)',line = list(color = 'rgb(8,48,107)',width = 1.5)), domain = list(row = 0, column = 1))  %>%
plot_ly(averages_borough_cumulative, x = ~BOROUGH_GROUP, y = ~COVID_CASE_COUNT, type = "bar", marker = list(color = 'rgb(158,202,225)',line = list(color = 'rgb(8,48,107)',width = 1.5)), domain = list(row = 0, column = 1))  %>%
layout(title = "The Summary of NYC Confirmed Case By Groups", showlegend = F,
grid=list(rows=1, columns=2),
paper_bgcolor='transparent',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE)
)
is(averages_borough_cumulative)
p1 <- plot_ly(averages_borough_cumulative, x = ~BOROUGH_GROUP, y = ~COVID_CASE_COUNT, type = "bar", marker = list(color = 'rgb(158,202,225)',line = list(color = 'rgb(8,48,107)',width = 1.5)), domain = list(row = 0, column = 1))
p1
p1
p1 <- plot_ly(averages_borough_cumulative, x = ~BOROUGH_GROUP, y = ~COVID_CASE_COUNT, type = "bar", marker = list(color = 'rgb(158,202,225)',line = list(color = 'rgb(8,48,107)',width = 1.5)))
p1
runApp('~/Desktop/Fall2020-Project2-group_434/app')
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
getwd()
"./app/output/warning.md"
runApp()
?plot_ly
library(plotly)
plot_pie <- plot_ly() %>%
add_pie(data = by_poverty , labels = ~ POVERTY_GROUP, values = ~CASE_COUNT,
name = "POVERTY_GROUP",
title = "POVERTY_GROUP",
domain = list(row = 0, column = 0))
plot_pie
getwd()
getwd()
getwd()
if (!require("dplyr")) {
install.packages("dplyr")
library(dplyr)
}
if (!require("tibble")) {
install.packages("tibble")
library(tibble)
}
if (!require("tidyverse")) {
install.packages("tidyverse")
library(tidyverse)
}
if (!require("shinythemes")) {
install.packages("shinythemes")
library(shinythemes)
}
if (!require("sf")) {
install.packages("sf")
library(sf)
}
if (!require("RCurl")) {
install.packages("RCurl")
library(RCurl)
}
if (!require("tmap")) {
install.packages("tmap")
library(tmap)
}
if (!require("rgdal")) {
install.packages("rgdal")
library(rgdal)
}
if (!require("leaflet")) {
install.packages("leaflet")
library(leaflet)
}
if (!require("shiny")) {
install.packages("shiny")
library(shiny)
}
if (!require("shinythemes")) {
install.packages("shinythemes")
library(shinythemes)
}
if (!require("plotly")) {
install.packages("plotly")
library(plotly)
}
if (!require("ggplot2")) {
install.packages("ggplot2")
library(ggplot2)
}
if (!require("viridis")) {
install.packages("viridis")
library(viridis)
}
if (!require("shinydashboard")) {
install.packages("shinydashboard")
library(shinydashboard)
}
if (!require("readr")) {
install.packages("readr")
library(readr)
}
if (!require("leaflet")) {
install.packages("leaflet")
library(leaflet)
}
if (!require("tigris")) {
install.packages("tigris")
library(tigris)
}
if (!require("emojifont")) {
install.packages("emojifont")
library(emojifont)
}
if (!require("shinyWidgets")) {
install.packages("shinyWidgets")
library(shinyWidgets)
}
load('./output/covid_zip_code.RData')
load('./output/collected_preprocessed_data.RData')
runApp()
