setwd("~/")
setwd("~/")
load("covid_zip_code.RData")
load("~/covid_zip_code.RData")
load("~/covid_zip_code.Data")
View(covid_zip_code)
View(covid_zip_code)
load("~/covid_zip_code.RData")
setwd("~/")
load("~/covid_zip_code.RData")
setwd("~/")
load("~/covid_zip_code.RData")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
covid_zip_code$ZipCode
View(covid_zip_code)
View(covid_zip_code)
?sort
runApp()
pal <- colorNumeric(
palette = "Greens",
domain = covid_zip_code$COVID_CASE_COUNT)
# create labels for zipcodes
labels <-
paste0(
"Zip Code: ",
covid_zip_code$GEOID10, "<br/>",
"Covid Case Count: ",
scales::dollar(covid_zip_code$COVID_CASE_COUNT)) %>%
lapply(htmltools::HTML)
runApp()
labels <-
paste0(
"Zip Code: ",
covid_zip_code$GEOID10, "<br/>",
"Covid Case Count: ",
scales::dollar(covid_zip_code$COVID_CASE_COUNT)) %>%
lapply(htmltools::HTML)
leaflet %>%
# add base map
addProviderTiles("CartoDB") %>%
# add zip codes
addPolygons(fillColor = ~pal(COVID_CASE_COUNT),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(weight = 2,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels) %>%
# add legend
addLegend(pal = pal,
values = ~COVID_CASE_COUNT,
opacity = 0.7,
title = htmltools::HTML("Covid Case Count"),
position = "bottomright")
?order
covid_zip_code <- order(covid_zip_code, method = "GEOID10")
covid_zip_code <- covid_zip_code[order(covid_zip_code$GEOID10), ]
setwd("~/Project 2/Zip App/app")
save(covid_zip_code, file = "covid_zip_code.Data")
setwd("~/Project 2/Zip App/app")
save(covid_zip_code, file = "covid_zip_code.Data")
setwd("~/Project 2/Zip App/app")
save(covid_zip_code, file = "covid_zip_code.Data")
setwd("~/Project 2/Zip App/app")
save(covid_zip_code, file = "covid_zip_code.RData")
runApp('~')
runApp('~')
covid_zip_code$GEOID10
input = "10001"
covid_zip_code[covid_zip_code$GEOID10 == input, ]
# create color palette
pal <- colorNumeric(
palette = "Greens",
domain = covid_zip_code$COVID_CASE_COUNT)
# create labels for zipcodes
labels <-
paste0(
"Zip Code: ",
covid_zip_code$GEOID10, "<br/>",
"Covid Case Count: ",
scales::dollar(covid_zip_code$COVID_CASE_COUNT)) %>%
lapply(htmltools::HTML)
leaflet %>%
# add base map
addProviderTiles("CartoDB") %>%
# add zip codes
addPolygons(fillColor = ~pal(COVID_CASE_COUNT),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(weight = 2,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels) %>%
# add legend
addLegend(pal = pal,
values = ~COVID_CASE_COUNT,
opacity = 0.7,
title = htmltools::HTML("Covid Case Count"),
position = "bottomright")
leaflet %>%
# add base map
addProviderTiles("CartoDB")
pal <- colorNumeric(
palette = "Greens",
domain = covid_zip_code$COVID_CASE_COUNT)
# create labels for zipcodes
labels <-
paste0(
"Zip Code: ",
covid_zip_code$GEOID10, "<br/>",
"Mean Income: ",
scales::dollar(covid_zip_code$COVID_CASE_COUNT)) %>%
lapply(htmltools::HTML)
covid_zip_code %>%
leaflet %>%
# add base map
addProviderTiles("CartoDB") %>%
# add zip codes
addPolygons(fillColor = ~pal(COVID_CASE_COUNT),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(weight = 2,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels) %>%
# add legend
addLegend(pal = pal,
values = ~COVID_CASE_COUNT,
opacity = 0.7,
title = htmltools::HTML("Mean Income <br>
Tax Returns <br>
by Zip Code <br>
2016"),
position = "bottomright")
runApp('~')
runApp('~')
runApp()
runApp('~')
runApp('~')
runApp('~')
?addPolygons
runApp('~')
runApp('~')
runApp('~')
runApp('~')
runApp('~')
runApp('~')
paste(covid_zip_code$GEOID10, " ", covid_zip_code$Neighborhood, sep = "")
paste(covid_zip_code$GEOID10, " ", covid_zip_code$Neighborhood, sep = "")[1]
?selectInput
?hr
runApp('~')
runApp('~')
?sidebarPanel
sidebarLayout
?sidebarLayout
runApp('~')
runApp('~')
runApp('~')
runApp('~')
?helpText
runApp('~')
names(covid_zip_code)
runApp('~')
runApp('~')
runApp('~')
runApp('~')
input$checkbox
runApp('~')
ifelse(TRUE, covid_zip_code$COVID_CASE_COUNT_4WEEK, covid_zip_code$COVID_CASE_COUNT)
covid_zip_code$COVID_CASE_COUNT_4WEEK
covid_zip_code$COVID_CASE_COUNT
View(covid_zip_code)
runApp('~')
?if
?if
runApp('~')
runApp('~')
runApp('~')
covid_zip_code$ZCTA5CE10
covid_zip_code$COVID_CASE_COUNT_4WEEK
?addPolygons
runApp('~')
?selectInput
runApp('~')
runApp('~')
runApp('~')
runApp('~')
runApp('~')
runApp('~')
runApp('~')
runApp('~')
length(1)
[1, 2]
c(1, 2)
c(1, 2) == 1
c(1, 2) == 1 | 2
c(1, 2) == 1 | 2
any(c(1, 2))
any(c(1, 2) == 1)
runApp('~')
c(1, 2, 3) == 1|2
c(1, 2, 3) == 1|3
c(1, 2, 3) ==
1
c(1, 2, 3) == 4 | 5
runApp('~')
runApp('~')
covid_zip_code$GEOID10
covid_zip_code$GEOID10 == c("10001", "10002")
runApp('~')
runApp('~')
runApp('~')
runApp('~')
runApp('~')
runApp('~')
?round
runApp('~')
setwd("~/Project 2/coronavirus-data-master")
library(tigris)
library(leaflet)
data_modzcta <- read.csv("data-by-modzcta.csv")
recent_modzcta <- read.csv("recent/recent-4-week-by-modzcta.csv")
recent_modzcta_mod <- recent_modzcta[, -1:-2]
covid_modzcta <- cbind(data_modzcta, recent_modzcta_mod)
View(covid_modzcta)
View(covid_modzcta)
# get zip boundaries that start with 1
covid_zip_code <- zctas(cb = TRUE, starts_with = "1")
covid_zip_code <- covid_zip_code[as.numeric(covid_zip_code$ZCTA5CE10) < 11436, ]
covid_modzcta$ZipCode <- as.character(covid_modzcta$ZipCode)
# join zip boundaries and covid data
covid_zip_code <- geo_join(covid_zip_code,
covid_modzcta,
by_sp = "GEOID10",
by_df = "ZipCode",
how = "left")
covid_modzcta$MODIFIED_ZCTA <- as.character(covid_modzcta$MODIFIED_ZCTA)
covid_modzcta$MODIFIED_ZCTA
# join zip boundaries and covid data
covid_zip_code <- geo_join(covid_zip_code,
covid_modzcta,
by_sp = "GEOID10",
by_df = "MODIFIED_ZCTA",
how = "left")
View(covid_zip_code)
View(covid_zip_code)
covid_zip_code <- na.omit(covid_zip_code)
covid_zip_code <- covid_zip_code[order(covid_zip_code$GEOID10), ]
setwd("~/Project 2/Zip App/app")
save(covid_zip_code, file = "covid_zip_code.RData")
shiny::runApp('~')
shiny::runApp('D:/')
setwd("~/GitHub/ADS-group-1/app")
setwd("./ADS-group-1/app")
setwd("../ADS-group-1/app")
load("../output/covid_zip_code.RData")
load("..output/covid_zip_code.RData")
load(".output/covid_zip_code.RData")
load("../app/output/covid_zip_code.RData")
shiny::runApp()
shiny::runApp()
shiny::runApp()
load("../app/output/covid_zip_code.RData")
setwd("../data/coronavirus-data-master")
